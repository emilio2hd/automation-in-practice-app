<div class="row justify-content-center mb-5">
  <div class="col-10">
    <div class="card">
      <div class="card-body">
        <h5 class="card-title">Skeletons/Content Placeholder</h5>
        <p class="card-text">
          Skeletons can enhance the experience of an application by distracting users a few moments,
          indicating something may still be loading.
        </p>
        <p class="card-text">
          This particular exercise has a random delay,
          that can vary from <em>1000</em> to <em>5000</em> milliseconds.
        </p>
      </div>
    </div>
  </div>
</div>


<div id="skeletonsApp">
  <div class="container">
    <b-skeleton-wrapper :loading="loading" class="row">
      <template #loading>
        <div class="col" v-for="skeleton in expectedContent">
          <b-card no-body>
            <b-skeleton-img></b-skeleton-img>
            <b-card-body>
              <b-card-title>
                <b-skeleton width="55%"></b-skeleton>
              </b-card-title>

              <b-card-text>
                <b-skeleton width="55%"></b-skeleton>
                <b-skeleton width="85%"></b-skeleton>
                <b-skeleton width="70%"></b-skeleton>
                <b-skeleton width="55%"></b-skeleton>
              </b-card-text>

              <b-skeleton type="button"></b-skeleton>
            </b-card-body>
          </b-card>
        </div>
      </template>

      <div class="row">
        <div class="col" v-for="contentItem in contentList">
          <b-card
            :title="contentItem.title"
            :img-src="contentItem.img"
            img-top
          >
            <b-card-text>{{ contentItem.synopsis }}</b-card-text>
            <a href="#" class="btn btn-primary">Go somewhere</a>
          </b-card>
        </div>
      </div>
    </b-skeleton-wrapper>
  </div>
</div>

<% content_for :content_javascript_bottom do %>
<script>
  let skeletonsApp = new Vue({
    el: '#skeletonsApp',
    data: {
      loading: true,
      expectedContent: 3,
      contentList: []
    },
    mounted() {
      const randomDelay = Math.floor(Math.random() * 4000) + 1000;

      setTimeout(() => {
        this.loading = false;
        this.contentList = Array.from({ length: this.expectedContent }, () => ({
            img: 'images/ready.jpg',
            title: 'Lorem Ipsum',
            synopsis: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse viverra aliquet tincidunt. Praesent eget venenatis sapien. Nam dictum ipsum et.'
        }));
      }, randomDelay);
    }
  });
</script>
<% end %>